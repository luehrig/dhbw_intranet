<?php
/**
 * @file
 * A block module that displays the organization hierarchy
 */
function empl_chart_help($path, $arg) {
switch ($path) {
    case "admin/help#empl_chart":
      return '<p>' . t("Visualize Organization Hierarchy") . '</p>';
      break;
  }
}

/**
 * Implements hook_block_info().
 */
function empl_chart_block_info() {
  $blocks['empl_chart'] = array(
    'info' => t('Org Chart'), //The name that will appear in the block list.
    'cache' => DRUPAL_CACHE_PER_ROLE, //Default
  );
  return $blocks;
}

function current_posts_contents(){
  //Get today's date.
  $today = getdate();
  //Calculate the date a week ago.
  $start_time = mktime(0, 0, 0,$today['mon'],($today['mday'] - 7), $today['year']);
  //Get all posts from one week ago to the present.
  $end_time = time();

  //Use Database API to retrieve current posts.
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created'))
    ->condition('status', 1) //Published.
    ->condition('created', array($start_time, $end_time), 'BETWEEN')
    ->orderBy('created', 'DESC') //Most recent first.
    ->execute(); 
  return $query;  
}

/**
 * Implements hook_block_view().
 * 
 * Prepares the contents of the block.
 */
function empl_chart_block_view($delta = '') {
  switch($delta){
    case 'empl_chart':
      $block['subject'] = t('Current posts');
      if(user_access('access content')){
        //Use our custom function to retrieve data.
        //$result = current_posts_contents();
        //Array to contain items for the block to render.
        //$items = array();
        //Iterate over the resultset and format as links.
        //foreach ($result as $node){
        //  $items[] = array(
        //    'data' => l($node->title, 'node/' . $node->nid),
        //  ); 
        //}
      
        /*if (empty($items)) { //No content in the last week.
          $block['content'] = t('No posts available.');  
        } 
        else {
          //Pass data through theme function.
          $block['content'] = theme('item_list', array(
            'items' => $items));
        }*/
        $block['content'] = '<div id="basicdiagram" style="width:640px; height:480px; border-style:dotted; border-width:1px;" />';
        drupal_add_js(drupal_get_path('module', 'empl_chart') .'/js/jquery-1.10.0.min.js');
        drupal_add_js(drupal_get_path('module', 'empl_chart') .'/jquery-ui-1.10.3/ui/jquery-ui.js');
        drupal_add_js(drupal_get_path('module', 'empl_chart') .'/primitives/primitives.min.js');
        //drupal_add_js(drupal_get_path('module', 'empl_chart') .'/js/test.js');
        //drupal_add_js('jQuery(document).ready(function(){test()});', 'inline');
        
        //Use Database API to retrieve root node
        $query = db_select('org', 'n')
          ->fields('n', array('oid', 'name', 'descr'))          
          ->condition('parent', NULL, 'IS')          
          ->execute();
        
        foreach($query as $node){
        $hierarchy_js  = "function build_empl_chart(){ ";
        $hierarchy_js .= "var options = new primitives.orgdiagram.Config(); ";
        
        //$hierarchy_js .= "var rootItem = new primitives.orgdiagram.ItemConfig(); ";
        //$hierarchy_js .= "rootItem.title = \"".$node->name."\"; ";
        //$hierarchy_js .= "rootItem.description = \"".$node->descr."\"; ";
        //$hierarchy_js .= "rootItem.image = \"http://www.basicprimitives.com/demo/images/photos/a.png\"; ";
        
        $hierarchy_js .= add_node($node->oid,$node->name,$node->descr,NULL);
        
        $hierarchy_js .= "options.rootItem = node".$node->oid."; ";
        $hierarchy_js .= "options.cursorItem = node".$node->oid."; ";
        $hierarchy_js .= "options.hasSelectorCheckbox = primitives.common.Enabled.False; ";
        $hierarchy_js .= "jQuery(\"#basicdiagram\").orgDiagram(options); }";
        }
        drupal_add_js($hierarchy_js, 'inline');
        drupal_add_js('jQuery(document).ready(function(){build_empl_chart()});', 'inline');
      }
    return $block;
  }
  
}

function add_node($nodeId, $nodeName, $nodeDescr, $parentName){
    
    $parent_js  = "var node".$nodeId." = new primitives.orgdiagram.ItemConfig(); ";
    $parent_js .= "node".$nodeId.".title = \"".$nodeName."\"; ";
    $parent_js .= "node".$nodeId.".description = \"".$nodeDescr."\"; ";
    
    if($parentName!=NULL){
        $parent_js .= $parentName.".items.push(node".$nodeId."); ";
    }
    $children = db_select('org', 'n')
          ->fields('n', array('oid', 'name', 'descr'))          
          ->condition('parent', $nodeId, '=')          
          ->execute();
    foreach($children as $node){
        $parent_js .= add_node($node->oid,$node->name,$node->descr,"node".$nodeId);
    }
    return $parent_js;
}

/**
 * Implements hook_menu().
 */
function empl_chart_menu() {
  $items = array();

  $items['admin/config/content/empl_chart'] = array(
    'title' => 'Org Chart',
    'description' => 'Configuration for org chart module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('empl_chart_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Page callback: Current posts settings
 *
 * @see empl_chart_menu()
 */
function empl_chart_form($form, &$form_state) {
  $form['empl_chart_max'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of posts'),
    '#default_value' => variable_get('empl_chart_max', 3),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t('The maximum number of links to display in the block.'),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}