<?php
/**
 * @file
 * A block module that displays the organization hierarchy
 */
function org_chart_help($path, $arg) {
switch ($path) {
    case "admin/help#org_chart":
      return '<p>' . t("Visualize Organization Hierarchy") . '</p>';
      break;
  }
}

/**
 * Implements hook_block_info().
 */
function org_chart_block_info() {
  $blocks['org_chart'] = array(
    'info' => t('Org Chart'), //The name that will appear in the block list.
    'cache' => DRUPAL_CACHE_PER_ROLE, //Default
  );
  return $blocks;
}

function current_posts_contents(){
  //Get today's date.
  $today = getdate();
  //Calculate the date a week ago.
  $start_time = mktime(0, 0, 0,$today['mon'],($today['mday'] - 7), $today['year']);
  //Get all posts from one week ago to the present.
  $end_time = time();

  //Use Database API to retrieve current posts.
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created'))
    ->condition('status', 1) //Published.
    ->condition('created', array($start_time, $end_time), 'BETWEEN')
    ->orderBy('created', 'DESC') //Most recent first.
    ->execute(); 
  return $query;  
}

/**
 * Implements hook_block_view().
 * 
 * Prepares the contents of the block.
 */
function org_chart_block_view($delta = '') {
  switch($delta){
    case 'org_chart':
      $block['subject'] = t('Current posts');
      if(user_access('access content')){
        
      	// Create element that will contain the jquery elements
        $block['content'] = '<div id="basicdiagram" style="width:640px; height:480px; border-style:dotted; border-width:1px;" />';
        
        // Add required js libraries
        drupal_add_js(drupal_get_path('module', 'org_chart') .'/js/jquery-1.10.0.min.js');
        drupal_add_js(drupal_get_path('module', 'org_chart') .'/jquery-ui-1.10.3/ui/jquery-ui.js');
        drupal_add_js(drupal_get_path('module', 'org_chart') .'/primitives/primitives.min.js');
                
        // Set vid for vocabulary "Geschäftsbereich"
        $vid = 4;        
        // Get top level element by vid
        $terms = taxonomy_get_tree($vid,0,1);
         
        foreach($terms as $term){
        $hierarchy_js  = "function build_org_chart(){ ";
        $hierarchy_js .= "var options = new primitives.orgdiagram.Config(); ";         
        $hierarchy_js .= add_node($vid, $term->tid, $term->name, $term->description, NULL);
        
        $hierarchy_js .= "options.rootItem = node".$term->tid."; ";
        $hierarchy_js .= "options.cursorItem = node".$term->tid."; ";
        $hierarchy_js .= "options.hasSelectorCheckbox = primitives.common.Enabled.False; ";
        $hierarchy_js .= "jQuery(\"#basicdiagram\").orgDiagram(options); }";
        }
        drupal_add_js($hierarchy_js, 'inline');
        drupal_add_js('jQuery(document).ready(function(){build_org_chart()});', 'inline');
        
      }
    return $block;
  }
  
}

function add_node($vid, $tid, $name, $descr, $parentName){
    
    $parent_js  = "var node".$tid." = new primitives.orgdiagram.ItemConfig(); ";
    $parent_js .= "node".$tid.".title = \"".$name."\"; ";
    $parent_js .= "node".$tid.".description = \"".$descr."\"; ";
    
    if($parentName!=NULL){
        $parent_js .= $parentName.".items.push(node".$tid."); ";
    }
    $children = taxonomy_get_children($tid, $vid);
    foreach($children as $node){
        $parent_js .= add_node($vid, $node->tid,$node->name,$node->description,"node".$tid);
    }
    return $parent_js;
}

/**
 * Implements hook_menu().
 */
function org_chart_menu() {
  $items = array();

  $items['admin/config/content/org_chart'] = array(
    'title' => 'Org Chart',
    'description' => 'Configuration for org chart module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('org_chart_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Page callback: Current posts settings
 *
 * @see org_chart_menu()
 */
function org_chart_form($form, &$form_state) {
  $form['org_chart_max'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of posts'),
    '#default_value' => variable_get('org_chart_max', 3),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t('The maximum number of links to display in the block.'),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}